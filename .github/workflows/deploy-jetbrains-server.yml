name: Deploy JetBrains License Server

on:
  workflow_dispatch:  # Allow manual triggers
  push:
    branches: [ main ]
  schedule:
    # Run every day at midnight UTC to keep the server alive
    - cron: '0 0 * * *'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/jetbrains-license-server:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to Azure Container Instances
      uses: azure/aci-deploy@v1
      with:
        resource-group: jetbrains-license
        dns-name-label: jetbrains-license-${{ github.run_id }}
        image: ghcr.io/${{ github.repository_owner }}/jetbrains-license-server:latest
        registry-login-server: ghcr.io
        registry-username: ${{ github.actor }}
        registry-password: ${{ secrets.GITHUB_TOKEN }}
        name: jetbrains-license-server
        location: 'eastus'
        ports: 8111
        environment-variables: |
          JLS_VENDOR_NAME=GitHubDeployment
          JLS_ACCESS_CONFIG=/data/access-config.json
          JLS_SERVICE_LOG_LEVEL=INFO
        cpu: 1
        memory: 1.5

    - name: Get deployment URL
      run: |
        echo "JetBrains License Server deployed successfully!"
        echo "Access the server at: http://${{ steps.deploy.outputs.ip-address }}:8111/jls"
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: deployment-logs
        path: |
          jetbrains-license-data/logs/
        if-no-files-found: ignore
